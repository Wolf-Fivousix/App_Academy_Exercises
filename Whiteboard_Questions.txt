Problem .2:
Find all the permutations of an array
example => permutations([1,2,3])
should return => [
  [1, 2, 3],
  [1, 3, 2],
  [2, 1, 3],
  [2, 3, 1],
  [3, 1, 2],
  [3, 2, 1]
 ]


array = [1,2,3]

def permutations(array)
    return [array] if array.length <= 1
    results = []
    array.each.with_index do |element, index|
        # p "Array: #{array}"
        # p "Element: #{element}"
        # p "Index: #{index}"
        permutations(array[0...index] + array[index + 1..-1]).each do |subarray|
            results << [element] + subarray
        end
    end
    results
end

p permutations(array) == array.permutation.to_a
